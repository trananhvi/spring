spring.application.name=login
# SP registration ?okta?
spring.security.saml2.relyingparty.registration.okta.identityprovider.metadata-location=https://dev-82990638.okta.com/app/exkobvb50io3pyNd05d7/sso/saml/metadata
spring.security.saml2.relyingparty.registration.okta.assertion-consumer-service.binding=post
spring.security.saml2.relyingparty.registration.okta.assertion-consumer-service.location=${app.base-url}/login/saml2/sso/okta
spring.security.saml2.relyingparty.registration.okta.relyingparty.entity-id=${app.base-url}/saml2/service-provider-metadata/okta

# location of your SP?s private key (PEM or PKCS#8)
#spring.security.saml2.relyingparty.registration.okta.signing.credentials[0].private-key-location=classpath:credentials/sp.key

# location of your SP?s public certificate
#spring.security.saml2.relyingparty.registration.okta.signing.credentials[0].certificate-location=classpath:credentials/sp.crt

# (optional) if your IdP also encrypts the assertion and you need to decrypt it:
#spring.security.saml2.relyingparty.registration.okta.decryption.credentials[0].private-key-location=classpath:credentials/sp-decrypt.key